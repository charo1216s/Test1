https://github.com/alibaba/Alibaba-Java-Coding-Guidelines/blob/master/README.md#5-security-specification


工具类不允许有public或者default构造方法  (????)
https://www.zhihu.com/question/266883899

https://www.ibm.com/developerworks/cn/java/deconding-code-specification-part-1/index.html


集合處理
1. 集合轉成Array時, 要使用集合的toArray(T[] arrays)方法，傳入型態一樣的Array 大小為list.size

說明: 使用 toArray 带参方法，入参分配的数组空间不够大时，toArray 方法内部将重新分配内存空间，并返回新数组地址；
如果数组元素大于实际所需，下标为[list.size()]的数组元素将被置为 null，其它数组元素保持原值，因此最好将方法入参数组大小定义与集合元素个数一致。

正例:
List<String> list = new ArrayList<String>(2);
list.add("guan");
list.add("bao");
String[] array = new String[list.size()];
array = list.toArray(array);
反例:
String[] array = list.toArray(); 
Error: ClassCastException 
若直接使用 toArray() ，此方法會創建一个 Object Array 直接將list轉成 Object Array ，此時若將Object[]轉为 String[] 會出現 ClassCastException錯誤。
Java 中的強制轉型只是針對單個對象，無法將一種型態的Array轉成为另一種Array

清单 26 toArray()源码

Public Object[] toArray(){
    Object aobj[] = new Object[size];
    System.arraycopy(((Object)(elementData)),0,((Object)(aobj)),0,size);
    return aobj;
}
public <T> T[] toArray(T[] a){
    if(a.length < size)
       // Make a new array of a's runtime type, but my contents:
    return (T[]) Arrays.copyOf(elementData,size, a.getClass());
    System.arraycopy(elementData,0,a,0,size);
    if(a.length> a[size] = null;
    return a;
}


2. 
