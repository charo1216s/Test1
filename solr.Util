package com.solrsync.util;

import java.security.NoSuchAlgorithmException;
import java.security.Security;
import java.util.HashMap;
import java.util.Map;

import javax.crypto.KeyGenerator;

import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;

public class EncryptUtil{
	
	public Map<String, String> encrypt() throws NoSuchAlgorithmException {
		Map<String, String> map = new HashMap<String, String>();
		String key = genKey();
		String enc =  encryptor(key);
		map = decryptor(key, enc);
		return map;
	}
	
	private String genKey() throws NoSuchAlgorithmException {
		Security.addProvider(new com.sun.crypto.provider.SunJCE());
		String deskey;
		KeyGenerator keygen;
		keygen = KeyGenerator.getInstance("DES");
		deskey = keygen.generateKey().toString();
		return deskey;
	} 
		
	private String encryptor(String key) throws NoSuchAlgorithmException {
		StandardPBEStringEncryptor encryptor = new StandardPBEStringEncryptor();
		encryptor.setPassword(key);
		String enc = encryptor.encrypt("cmsdba");
		return enc;
	}
	
	private Map<String, String> decryptor(String key, String enc) throws NoSuchAlgorithmException {
		Map<String, String> map = new HashMap<String, String>();
		StandardPBEStringEncryptor decryptor = new StandardPBEStringEncryptor();
		decryptor.setPassword(key);
		map.put("username", decryptor.decrypt(enc));
		map.put("password", decryptor.decrypt(enc));
		return map;
	}
}
